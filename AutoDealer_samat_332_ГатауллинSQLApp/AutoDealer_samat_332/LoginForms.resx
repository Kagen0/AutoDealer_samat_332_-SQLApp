<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="eye.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wQAADsEBuJFr7QAAA+VJREFUeF7tmmtPFDEUhv3n/CP9otFEP4kaQe6oEZY7IggSAshNLuO+bk9oJm97
        2s7ZMZndJ3mzhG07M892Ou3MPKlGnLEA9zmyjAW4z5ElKGB3t6omJib+BX93FSpADtzP/Lz7smMkC0Dm
        51yBDpElAOmaBCrAP/9ZunQ6BAdBHCQ7eEmphOvrqvpOBO/uVNXVlSvUIkEBYMFQwu/zeFv1TL6tqrMz
        V3mIRAWAhQUbCaxuajDuPDy4hoxRBQALCaxebqan7EUkCQCLi80ksDqlsZyYJQsASw0krK3ZSnj10qY3
        ZAkAbGf8xCRcXDzWPz6uqpubwVXh8HDw/w/v8yVdXrrGC8kWAJaW4juaOjCGwC/L2g3l15GrWECRgJMT
        fQebShAODtJllJAt4Dzjem45bdbGH0kuWQKu+ucb22gsVj0B+GNILDlkCWAbS4mlhPt7fT9QJpVkAWxD
        ubGEte8nlSQBbAP15JSzgrXvJwVVAFZorHFJfTKCgY+Vk7R5OmCOoaEKYA1LMCgyZmfbk/CnP5li25Bo
        RAVsb4Ub/7HnCgXAcpbVk1hKwL0Etg1kfd0VChAVwBpEMA/XePY0LgCxlMDal8QoEqBdZnKmslYSYuNB
        r+cKEYICWEPIhtKlwE6kS7JYSVj5Ft5uiGwBKbB6WqwksLaR3qorUIMKYA0g29uugAKri8S+QywkxO5o
        M7IEpHR/wOoiAvtO0nQBtde/OrF2EQYVgO7CGkBSYPUQH/a9pElPYO0hWacAYI1INFgdpA4rIymRsLGR
        vm2hSIB2GWR1JLgV5sPKSHIkxC69n5ddIUJQAGCNIS+euwIRWD3JXH+qLGsIq9trrK6kvl7xiQrQ7uTG
        yJkMaUmRwOohW5uuQICoAMAaleCuboyjo/YksDqIhipAuweojQeb/V+A1StJTAK7eYp911AFAO3RmEZb
        PQEPU6Vcyr0AkCQA+DvBotH2mJBKsoDbW/0A7u5cYQV0TX/0n/o4eGdARmu/zVCsJCQLAKen+s7h1rUV
        lu8nhMgSAOQ5XiwzM66wAcvaPKHh2iFbANjfT+umKNeUnwmPxpr0hCIBIGdkX115PL9TKBkwSyUUCwB4
        NM12RgtmmDiVcKnCZArrAyy1WdmclEhoJADg13rzuvnOWyV3TGgsQGCvvv2v5PQEMwEAveHT9PBE+FeX
        Jq/r+JgKEEoGsVgwFWdrDgsJQxHgg/n5u8lyIRpN314buoA68qrs1y+DB6n4FXEFwGVVW16HaCKhdQHD
        Qluxht4t7IwAwA7cD6NTAgA7cAmjcwIAO/iROAV86gJCdFZAKmMB7nNkGQtwnyNKVf0FwEdF2n+ZMH4A
        AAAASUVORK5CYII=
</value>
  </data>
</root>